// <auto-generated />
using System;
using Infrastructures;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructures.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ConfirmationToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Point")
                        .HasPrecision(18, 2)
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Carts", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Size")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 6m
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 7m
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 8m
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 9m
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 10m
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 11m
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 12m
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 13m
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 14m
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 15m
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 16m
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 17m
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 18m
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 19m
                        },
                        new
                        {
                            Id = 15,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Nhẫn",
                            Size = 20m
                        },
                        new
                        {
                            Id = 16,
                            IsDeleted = false,
                            Length = 36m,
                            Name = "Dây chuyền",
                            Size = 0m
                        },
                        new
                        {
                            Id = 17,
                            IsDeleted = false,
                            Length = 38m,
                            Name = "Dây chuyền",
                            Size = 0m
                        },
                        new
                        {
                            Id = 18,
                            IsDeleted = false,
                            Length = 40m,
                            Name = "Dây chuyền",
                            Size = 0m
                        },
                        new
                        {
                            Id = 19,
                            IsDeleted = false,
                            Length = 42m,
                            Name = "Dây chuyền",
                            Size = 0m
                        },
                        new
                        {
                            Id = 20,
                            IsDeleted = false,
                            Length = 44m,
                            Name = "Dây chuyền",
                            Size = 0m
                        },
                        new
                        {
                            Id = 21,
                            IsDeleted = false,
                            Length = 46m,
                            Name = "Dây chuyền",
                            Size = 0m
                        },
                        new
                        {
                            Id = 22,
                            IsDeleted = false,
                            Length = 48m,
                            Name = "Dây chuyền",
                            Size = 0m
                        },
                        new
                        {
                            Id = 23,
                            IsDeleted = false,
                            Length = 50m,
                            Name = "Dây chuyền",
                            Size = 0m
                        },
                        new
                        {
                            Id = 24,
                            IsDeleted = false,
                            Length = 52m,
                            Name = "Dây chuyền",
                            Size = 0m
                        },
                        new
                        {
                            Id = 25,
                            IsDeleted = false,
                            Length = 54m,
                            Name = "Dây chuyền",
                            Size = 0m
                        },
                        new
                        {
                            Id = 26,
                            IsDeleted = false,
                            Length = 56m,
                            Name = "Dây chuyền",
                            Size = 0m
                        },
                        new
                        {
                            Id = 27,
                            IsDeleted = false,
                            Length = 58m,
                            Name = "Dây chuyền",
                            Size = 0m
                        },
                        new
                        {
                            Id = 28,
                            IsDeleted = false,
                            Length = 60m,
                            Name = "Dây chuyền",
                            Size = 0m
                        },
                        new
                        {
                            Id = 29,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Vòng tay",
                            Size = 36m
                        },
                        new
                        {
                            Id = 30,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Vòng tay",
                            Size = 38m
                        },
                        new
                        {
                            Id = 31,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Vòng tay",
                            Size = 40m
                        },
                        new
                        {
                            Id = 32,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Vòng tay",
                            Size = 42m
                        },
                        new
                        {
                            Id = 33,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Vòng tay",
                            Size = 44m
                        },
                        new
                        {
                            Id = 34,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Vòng tay",
                            Size = 46m
                        },
                        new
                        {
                            Id = 35,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Vòng tay",
                            Size = 48m
                        },
                        new
                        {
                            Id = 36,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Vòng tay",
                            Size = 50m
                        },
                        new
                        {
                            Id = 37,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Vòng tay",
                            Size = 52m
                        },
                        new
                        {
                            Id = 38,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Vòng tay",
                            Size = 54m
                        },
                        new
                        {
                            Id = 39,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Vòng tay",
                            Size = 56m
                        },
                        new
                        {
                            Id = 40,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Vòng tay",
                            Size = 58m
                        },
                        new
                        {
                            Id = 41,
                            IsDeleted = false,
                            Length = 0m,
                            Name = "Vòng tay",
                            Size = 60m
                        });
                });

            modelBuilder.Entity("Domain.Entities.Diamond", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CaratWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Clarity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cut")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Diamonds", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CaratWeight = 2.3m,
                            Clarity = "FL",
                            Color = "D",
                            Cut = "Excellent",
                            IsDeleted = false,
                            Name = "GIA Excellent FL ",
                            Origin = "GIA",
                            Price = 50000000m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 2,
                            CaratWeight = 2.5m,
                            Clarity = "IF",
                            Color = "E",
                            Cut = "VeryGood",
                            IsDeleted = false,
                            Name = "HRD VeryGood IF",
                            Origin = "HRD",
                            Price = 60000000m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 3,
                            CaratWeight = 3.5m,
                            Clarity = "I1",
                            Color = "R",
                            Cut = "Good",
                            IsDeleted = false,
                            Name = "IGI Good I1",
                            Origin = "IGI",
                            Price = 40000000m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 4,
                            CaratWeight = 5m,
                            Clarity = "VVS1",
                            Color = "S",
                            Cut = "Fair",
                            IsDeleted = false,
                            Name = "CGL Fair VVS1",
                            Origin = "CGL",
                            Price = 70000000m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 5,
                            CaratWeight = 6.5m,
                            Clarity = "I3",
                            Color = "T",
                            Cut = "Excellent",
                            IsDeleted = false,
                            Name = "EGL Excellent I3",
                            Origin = "EGL",
                            Price = 55000000m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 6,
                            CaratWeight = 7.5m,
                            Clarity = "I2",
                            Color = "X",
                            Cut = "VeryGood",
                            IsDeleted = false,
                            Name = "AGS VeryGood I2",
                            Origin = "AGS",
                            Price = 60000000m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 7,
                            CaratWeight = 5.3m,
                            Clarity = "SI2",
                            Color = "Y",
                            Cut = "Good",
                            IsDeleted = false,
                            Name = "CGL Good SI2",
                            Origin = "CGL",
                            Price = 65000000m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 8,
                            CaratWeight = 4.7m,
                            Clarity = "I1",
                            Color = "Z",
                            Cut = "Fair",
                            IsDeleted = false,
                            Name = "EGL Fair I1",
                            Origin = "EGL",
                            Price = 80000000m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 9,
                            CaratWeight = 2.7m,
                            Clarity = "VS1",
                            Color = "M",
                            Cut = "Excellent",
                            IsDeleted = false,
                            Name = "AGS Excellent VS1",
                            Origin = "AGS",
                            Price = 90000000m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 10,
                            CaratWeight = 6.3m,
                            Clarity = "VVS2",
                            Color = "N",
                            Cut = "VeryGood",
                            IsDeleted = false,
                            Name = "IGI VeryGood VVS2",
                            Origin = "IGI",
                            Price = 75000000m,
                            Quantity = 10
                        });
                });

            modelBuilder.Entity("Domain.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiamondId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("UrlPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("DiamondId");

                    b.HasIndex("ProductId");

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("DiscountPercentage")
                        .HasColumnType("real");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiverPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Payments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PaymentMethod = "Payment in cash"
                        },
                        new
                        {
                            Id = 2,
                            PaymentMethod = "Payment by PayOS"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Wage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            IsDeleted = false,
                            Name = "Nhẫn Vàng trắng 14K đính đá  ",
                            Price = 7236000m,
                            ProductTypeId = 1,
                            Quantity = 10,
                            Wage = 500000m,
                            Weight = 7m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 16,
                            IsDeleted = false,
                            Name = "Dây chuyền Vàng Trắng Ý 18K ",
                            Price = 15692000m,
                            ProductTypeId = 1,
                            Quantity = 10,
                            Wage = 1000000m,
                            Weight = 150m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            IsDeleted = false,
                            Name = "Lắc tay Bạc đính đá",
                            Price = 700000m,
                            ProductTypeId = 3,
                            Quantity = 10,
                            Wage = 100000m,
                            Weight = 200m
                        });
                });

            modelBuilder.Entity("Domain.Entities.ProductDiamond", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiamondId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiamondId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductDiamonds", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiamondId = 1,
                            IsDeleted = false,
                            IsMain = true,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            DiamondId = 1,
                            IsDeleted = false,
                            IsMain = true,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            DiamondId = 2,
                            IsDeleted = false,
                            IsMain = false,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 4,
                            DiamondId = 3,
                            IsDeleted = false,
                            IsMain = false,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 5,
                            DiamondId = 3,
                            IsDeleted = false,
                            IsMain = true,
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Material = "Vàng",
                            Price = 681000m,
                            Weight = 1.0
                        },
                        new
                        {
                            Id = 2,
                            Material = "Bạch kim",
                            Price = 827287m,
                            Weight = 1.0
                        },
                        new
                        {
                            Id = 3,
                            Material = "Bạc",
                            Price = 22325m,
                            Weight = 1.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.ProductWarranty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductWarranties");
                });

            modelBuilder.Entity("Domain.Entities.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Promotions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountPercentage = 0.5m,
                            IsDeleted = false,
                            Point = 10000
                        },
                        new
                        {
                            Id = 2,
                            DiscountPercentage = 1m,
                            IsDeleted = false,
                            Point = 15000
                        },
                        new
                        {
                            Id = 3,
                            DiscountPercentage = 1.5m,
                            IsDeleted = false,
                            Point = 20000
                        });
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Customer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Name = "SaleStaff"
                        },
                        new
                        {
                            Id = 4,
                            Name = "DeliveryStaff"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.HasOne("Domain.Entities.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domain.Entities.Cart", b =>
                {
                    b.HasOne("Domain.Entities.Account", "Account")
                        .WithMany("Carts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Domain.Entities.CartItem", b =>
                {
                    b.HasOne("Domain.Entities.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.Image", b =>
                {
                    b.HasOne("Domain.Entities.Diamond", "Diamond")
                        .WithMany("Images")
                        .HasForeignKey("DiamondId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Diamond");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.HasOne("Domain.Entities.Account", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Payment", "Payment")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("Domain.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("Domain.Entities.ProductDiamond", b =>
                {
                    b.HasOne("Domain.Entities.Diamond", "Diamond")
                        .WithMany("ProductDiamonds")
                        .HasForeignKey("DiamondId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("ProductDiamonds")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Diamond");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.ProductWarranty", b =>
                {
                    b.HasOne("Domain.Entities.Order", "Order")
                        .WithMany("ProductWarranties")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany("ProductWarranties")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Entities.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Entities.Diamond", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("ProductDiamonds");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("ProductWarranties");
                });

            modelBuilder.Entity("Domain.Entities.Payment", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Images");

                    b.Navigation("OrderItems");

                    b.Navigation("ProductDiamonds");

                    b.Navigation("ProductWarranties");
                });

            modelBuilder.Entity("Domain.Entities.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Entities.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
